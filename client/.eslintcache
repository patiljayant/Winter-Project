[{"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\index.js":"1","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\App.js":"2","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\reportWebVitals.js":"3","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\home.js":"4","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\navbar.js":"5","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\reducers\\rootReducer.js":"6","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\product.js":"7","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\cart.js":"8","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\Login.js":"9","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\Register.js":"10","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\addProduct.js":"11","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\searchedProducts.js":"12","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\reducers\\localStorage.js":"13","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\addAddress.js":"14","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\addresses.js":"15","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\dashboard.js":"16","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\verify.js":"17","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\footer.js":"18","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\ordersOnWay.js":"19"},{"size":933,"mtime":1610512541178,"results":"20","hashOfConfig":"21"},{"size":2913,"mtime":1612416227154,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":7974,"mtime":1612240330524,"results":"24","hashOfConfig":"21"},{"size":6192,"mtime":1612284608256,"results":"25","hashOfConfig":"21"},{"size":5513,"mtime":1612416350294,"results":"26","hashOfConfig":"21"},{"size":6959,"mtime":1612416186380,"results":"27","hashOfConfig":"21"},{"size":5639,"mtime":1612148702375,"results":"28","hashOfConfig":"21"},{"size":3977,"mtime":1612239165349,"results":"29","hashOfConfig":"21"},{"size":6427,"mtime":1612231511720,"results":"30","hashOfConfig":"21"},{"size":7652,"mtime":1609845395359,"results":"31","hashOfConfig":"21"},{"size":5416,"mtime":1611671589766,"results":"32","hashOfConfig":"21"},{"size":705,"mtime":1612368908690,"results":"33","hashOfConfig":"21"},{"size":5705,"mtime":1612102420959,"results":"34","hashOfConfig":"21"},{"size":8611,"mtime":1612234203974,"results":"35","hashOfConfig":"21"},{"size":2882,"mtime":1612239963221,"results":"36","hashOfConfig":"21"},{"size":686,"mtime":1611891282381,"results":"37","hashOfConfig":"21"},{"size":1642,"mtime":1612282713918,"results":"38","hashOfConfig":"21"},{"size":1532,"mtime":1612343922498,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1k8rnul",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"42"},"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\index.js",[],["91","92"],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\App.js",[],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\reportWebVitals.js",[],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\home.js",["93","94","95","96","97","98","99"],"import {React, Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link,NavLink} from 'react-router-dom';\r\nimport '../assets/homeStyle.css';\r\nimport Drop from '../assets/chevron-down-outline.svg';\r\n\r\nclass Home extends Component{\r\n\r\n    sortDescending = () =>{\r\n        this.props.sortHighToLow();\r\n    }\r\n\r\n    sortAscending = () => {\r\n        this.props.sortLowToHigh();\r\n    }\r\n    \r\n    sortRating = () => {\r\n        this.props.sortRating();\r\n    }\r\n    \r\n    calculateRating = (p) => {\r\n        var sum = 0;\r\n        for(var i=0;i<p.rating.length;i++){\r\n            sum+=p.rating[i];\r\n        }\r\n        return sum/p.rating.length;\r\n    }\r\n    \r\n    render(){\r\n        const products = this.props.products;\r\n        const sort = products.length ? (<div className=\"mld \">\r\n        <div className=\"ldiv\">\r\n            <span>SORT BY</span>\r\n            <div class=\"navbar-toggler float-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sortDropDown\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <img className=\"adjust-dropdown\" src={Drop} />\r\n            </div>\r\n            <br/>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <div class=\"collapse navbar-collapse\" id=\"sortDropDown\">\r\n            <ul className=\"navbar-nav\">\r\n            <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Price\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a class=\"dropdown-item\" onClick={this.sortDescending} >High to Low</a>\r\n          <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" onClick={this.sortAscending} >Low to High</a>\r\n        </div>\r\n      </li>\r\n      <li>\r\n      <a class=\"nav-link\" href=\"#\" onClick={this.sortRating} >\r\n          Rating\r\n        </a>\r\n        </li>\r\n        <li>\r\n      <a class=\"nav-link\" href=\"#\"  >\r\n          Relevence\r\n        </a>\r\n      </li>\r\n      </ul>\r\n      </div>\r\n        </div>\r\n        <br/>\r\n    </div>):(<div></div>)\r\n        const productList = products.length ? (\r\n            products.map(product => {return(\r\n                    <div className=\"mrd\" key={product._id} >\r\n                        <Link to={'/products/' + product._id }  style={{ color: 'inherit', textDecoration: 'none', margin:0}}>\r\n                            <div className=\"rdiv\" >\r\n                                    <div className=\"productImage\">\r\n                                        <img className=\"img-thumbnail rounded float-start\" style={{border:'none'}} alt={product.imgUrl} src={product.imgUrl} />\r\n                                    </div>\r\n\r\n                                <div className=\"productInfo\" >\r\n                                    <span>{product.name.toUpperCase()}</span><br/>\r\n                                    <p className=\"text-muted home-reduce-margin\"><button className=\"btn btn-success\" type=\"button\" >{ product.rating.length ? (this.calculateRating(product).toFixed(1)):(0) } &#9734;</button> {product.rating.length} Ratings and {product.reviews.length} Reviews</p>\r\n                                    <p className=\"home-reduce-margin p-desc\">{product.info.substring(0,300)}...</p>\r\n\r\n                                    <div className=\"p-desc p-price\">\r\n                                    <span>&#8377; {Math.round(product.price - (product.discount/100)*product.price)}</span>\r\n                                    <p className=\"home-reduce-margin\"> <s>&#8377; {product.price}</s> &nbsp; {product.discount}% off</p>\r\n                                    </div>\r\n\r\n \r\n                                </div>\r\n    \r\n                                <div className=\"productPrice p-desc\">\r\n                                    <span>&#8377; {Math.round(product.price - (product.discount/100)*product.price)}</span><br/>\r\n                                    <p className=\"home-reduce-margin\"> <s>&#8377; {product.price}</s> &nbsp; {product.discount}% off</p>\r\n                                    <b>{ product.emiAvailable ? <p className=\"home-reduce-margin text-info\">EMI Available</p>: <p className=\"home-reduce-margin text-danger\" >EMI Not Available</p> }\r\n                                    {product.inStock ? <p className=\"home-reduce-margin text-info\">In Stock</p> : <p className=\"home-reduce-margin text-danger\" >Out of Stock</p>}\r\n                                    </b>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>           \r\n             ) })\r\n        ) : (<div className='jumbotron'>HEY, NO PRODUCTS LAUNCHED YET</div>)\r\n        return(\r\n            <div className='home row'>\r\n\r\n                <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\r\n                  <ol class=\"carousel-indicators\">\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"3\"></li>\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"4\"></li>\r\n                  </ol>\r\n                  <div class=\"carousel-inner\">\r\n                    <div class=\"carousel-item active\">\r\n                      <img class=\"d-block w-100 add\" src=\"/images/71hJJTkNCHL._SL1500_.jpg\" alt=\"First slide\"/>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                      <img class=\"d-block w-100 add\" src=\"/images/Header_1500x600._CB412497578_.jpg\" alt=\"Second slide\"/>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                      <img class=\"d-block w-100 add\" src=\"/images/Tallhero_1500x600._CB414628412_.jpg\" alt=\"Third slide\"/>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                      <img class=\"d-block w-100 add\" src=\"/images/lappy.jpg\" alt=\"Fourth slide\"/>\r\n                    </div>\r\n                    <div class=\"carousel-item\">\r\n                      <img class=\"d-block w-100 add\" src=\"/images/Super-saver-1500x600-EOSS-1._CB411551980_.jpg\" alt=\"Fifth slide\"/>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"sr-only\">Previous</span>\r\n                  </a>\r\n                  <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"sr-only\">Next</span>\r\n                  </a>\r\n                </div>               \r\n\r\n               <br/>\r\n\r\n               <div className=\"col-md-3 cart-sticky home-mld\">{sort}</div>\r\n\r\n               <div className=\"col-md-9 home-mrd\" >    { productList } </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        products: state.products\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sortHighToLow : () => {\r\n            dispatch({type:'SORT_HIGH_TO_LOW'});\r\n        },\r\n        sortLowToHigh : () => {\r\n            dispatch({type:'SORT_LOW_TO_HIGH'});\r\n        },\r\n        sortRating : () => {\r\n            dispatch({type:'SORT_BY_RATING'})\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\navbar.js",["100","101","102","103","104"],"import { React, Component } from 'react';\r\nimport { Link, NavLink, withRouter, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Logo from '../assets/logo.png';\r\nimport Cart from '../assets/cart.png';\r\nimport SI from '../assets/searchIcon.png';\r\nimport '../assets/navbarStyle.css';\r\nimport axios from 'axios';\r\nimport Close from '../assets/close-outline.svg';\r\nimport Menu from '../assets/menu-outline.svg';\r\n\r\nclass Navbar extends Component{\r\n\r\n    state={\r\n        value:null\r\n    };\r\n\r\n    handleLogOut = (e) => {\r\n        axios.get('/api/apiRoutes/logout')\r\n             .then((res) => {\r\n                this.props.checkLoginstatus(res.data);\r\n             });\r\n    }\r\n    handleSearch = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.value === null || this.state.value === \"\")\r\n            e.preventDefault();\r\n\r\n        else{\r\n                \r\n               if(this.props.state.searchValue !== this.state.value){\r\n                   console.log('sucess')\r\n                   this.props.updateSearchValue(this.state.value);\r\n                   this.props.history.push('/search/'+this.state.value)\r\n               }\r\n            }   \r\n    }\r\n    \r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            value:e.target.value,\r\n            position : -258\r\n        });\r\n    }\r\n    \r\n    handleSidebar = () =>{\r\n        console.log('cllicked')\r\n        this.setState({\r\n            position : 0\r\n        })\r\n    }\r\n\r\n    handleSidebarClose = () => {\r\n        this.setState({\r\n            position : -258\r\n        })\r\n    }\r\n\r\n    render(){\r\n    const flag = this.props.state.isLoggedIn ? (\r\n        <li class=\"nav-item\" onClick = {this.handleLogOut}> <span className=\"set-display\">&nbsp; </span><Link > <button className=\"btn btn-light set-display\">LogOut</button></Link></li>):(\r\n        <li class=\"nav-item\"><span className=\"set-display\">&nbsp;</span> <Link to={\"/login\"} ><button className=\"btn btn-light set-display\">LogIn/SignUp</button></Link></li>);\r\n\r\n    return(\r\n    <div className=\"Navbar\">\r\n    <div className='sidebar' style={{ position:'fixed' ,left:this.state.position}}>\r\n    <div className=\"close-sidebar\" onClick={this.handleSidebarClose}>\r\n    <img src={Close} />\r\n    </div>\r\n    <div className='sidebar-head'>Hello, {this.props.state.isLoggedIn ? (this.props.state.user.firstName):(<>User</>)}</div>\r\n    <div className='dropdown-divider'></div>\r\n    <div className=\"sidebar-body\">Home</div>\r\n    <div className='dropdown-divider'></div>\r\n    {this.props.state.isLoggedIn ? (<Link to={'/'+ this.props.state.user._id +'/dashboard'} style={{textDecoration:'none', color:'#8cfffb'}}><div className=\"sidebar-body\">Dashboard</div><div className='dropdown-divider'></div></Link>) : (<div></div>)}\r\n    \r\n    <Link to='/ordersOnway' style={{textDecoration:'none', color:'#8cfffb'}}><div className=\"sidebar-body\">Orders On The Way</div></Link>\r\n    <div className='dropdown-divider'></div>\r\n    <div className=\"sidebar-body\">Buy Again</div>\r\n    <div className='dropdown-divider'></div>\r\n    {this.props.state.isLoggedIn ? (<div className=\"sidebar-body\" onClick = {this.handleLogOut}>LogOut</div>) : \r\n    (<Link to='/login' style={{textDecoration:'none', color:'#8cfffb'}}><div className=\"sidebar-body\" >Login/SignUp</div></Link>)}\r\n    <div className='dropdown-divider'></div><br/>\r\n    </div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light \" >\r\n        <div className=\"sidebar-toggler\" onClick={this.handleSidebar}>\r\n        <img src={Menu} />\r\n        </div>\r\n                <Link className=\"navbar-brand mobile-display\" to={\"/\"}>\r\n                    <img src={ Logo } alt=\"IIIT.com\" width=\"120\" height=\"24\"/>\r\n                </Link>\r\n                <div className=\"contain mobile-display\">\r\n                                <button className=\"btn set-item\">\r\n                                    <img src={ Cart } alt=\"Cinque Terre\" width=\"35\" height=\"25\"/>\r\n\t        \t\t\t\t\t\t{this.props.state.isLoggedIn ? <div class=\"center\" >{this.props.state.user.productsInCart.length}</div> :<></>}\r\n                                </button>\r\n                </div>  \r\n            <div className=\"container\"> \r\n                <Link className=\"navbar-brand set-display\" to={\"/\"}>\r\n                    <img src={ Logo } alt=\"IIIT.com\" width=\"120\" height=\"24\"/>\r\n                </Link>\r\n                    \r\n                <form class=\"form-inline d-flex my-2 my-lg-0\" onSubmit={this.handleSearch}>\r\n                    <input class=\"control-input\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={ this.handleChange } />\r\n                    <button class=\"control-button my-2 my-sm-0\" width=\"45\" type=\"submit\">\r\n                        <img src={ SI } alt=\"search\" width=\"20\" height=\"20\"/>\r\n                    </button>\r\n                </form>\r\n                \r\n                <div class=\"set-item\" id=''>\r\n                    <ul class=\"navbar-nav ml-auto\">\r\n                        <li class=\"nav-item active \">\r\n                            <div className=\"contain\">\r\n                                <button className=\"btn set-display\" onClick={()=>{this.props.history.push('/productsInCart')}}>\r\n                                    <img src={ Cart } alt=\"Cinque Terre\" width=\"35\" height=\"25\"/>\r\n\t        \t\t\t\t\t\t{this.props.state.isLoggedIn ? <div class=\"center\" >{this.props.state.user.productsInCart.length}</div> :<></>}\r\n                                </button>\r\n                                </div>              \r\n                        </li> \r\n        \r\n                        {flag}\r\n                    \r\n                    </ul>\r\n                </div>\r\n            </div>                    \r\n        </nav>\r\n\r\n    </div>\r\n    );\r\n}\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n    state : state\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n    checkLoginstatus: (status) => {\r\n      dispatch({type:'LOGIN_STATUS',status:status});\r\n      },\r\n    \r\n    updateSearchValue : (value) => {\r\n        dispatch({type:'SEARCH_VALUE', value:value});\r\n    }  \r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar);\r\n","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\reducers\\rootReducer.js",["105","106","107"],"const rootReducer = (state, action) => {\r\n\r\n    if(action.type ==='FETCH_PRODUCTS'){\r\n        return { ...state,\r\n                 products : action.products}\r\n    }\r\n\r\n    if(action.type === 'ADD_TO_CART'){  \r\n        return { ...state,\r\n               user : action.user };\r\n    }\r\n\r\n    if(action.type === 'UPDATE_CART'){\r\n        return {\r\n            ...state,\r\n            user : action.user\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SUBSTRACT_ITEM'){  \r\n        return {\r\n            ...state,\r\n            user : action.user\r\n        }\r\n    }\r\n\r\n    if(action.type === 'ADD_ITEM'){\r\n        return {\r\n            ...state,\r\n            user : action.user\r\n        }\r\n    }\r\n\r\n    if(action.type === 'LOGIN_STATUS'){\r\n        return {\r\n            ...state,\r\n            isLoggedIn : action.status.isLoggedIn,\r\n            user : action.status.details\r\n        }\r\n    }\r\n    \r\n    if(action.type === 'SORT_HIGH_TO_LOW'){\r\n        const products = state.products.map(product => {return product});\r\n        products.sort((a,b) => (b.price - (b.price * b.discount/100)) - (a.price - (a.price * a.discount/100)));\r\n\r\n        return{\r\n            ...state,\r\n            products: products\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SORT_LOW_TO_HIGH'){\r\n        const products = state.products.map(product => {return product});\r\n        products.sort((a,b) => (a.price - (a.price * a.discount/100)) - (b.price - (b.price * b.discount/100)));\r\n\r\n        return{\r\n            ...state,\r\n            products: products\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SORT_BY_RATING'){\r\n        const products = state.products.map(product => {\r\n            if(product.rating.length){\r\n                product.tr = 0;\r\n                for(var i=0;i<product.rating.length;i++){\r\n                    product.tr += product.rating[i];\r\n                }\r\n            }\r\n\r\n            else  \r\n                product.tr = 0;\r\n\r\n            return product    \r\n        })\r\n\r\n        products.sort((a,b) => b.tr - a.tr);\r\n        return{\r\n            ...state,\r\n            products : products\r\n        }\r\n    }\r\n\r\n    \r\n    if(action.type === 'SEARCH_VALUE'){\r\n        console.log(action.value)\r\n        return{\r\n            ...state,\r\n            searchValue : action.value\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SEARCH'){\r\n        var searchedProducts = state.products.map(product => {\r\n\r\n            if((product.name.toLowerCase().search(action.value.toLowerCase())) >= 0){\r\n                return product;\r\n            }\r\n\r\n            for(var i=0;i<product.tags.length;i++){\r\n                if((product.tags[i].toLowerCase().search(action.value.toLowerCase())) >= 0){\r\n                    return product;\r\n                }\r\n            }\r\n        })\r\n\r\n        searchedProducts = searchedProducts.filter(product => product !== undefined)\r\n\r\n        return {\r\n            ...state,\r\n            searchedProducts : searchedProducts\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SORT_SEARCH_HIGH_TO_LOW'){\r\n        const products = state.searchedProducts.map(product => {return product});\r\n        products.sort((a,b) => (b.price - (b.price * b.discount/100)) - (a.price - (a.price * a.discount/100)));\r\n\r\n        return{\r\n            ...state,\r\n            searchedProducts: products\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SORT_SEARCH_LOW_TO_HIGH'){\r\n        const products = state.searchedProducts.map(product => {return product});\r\n        products.sort((a,b) => (a.price - (a.price * a.discount/100)) - (b.price - (b.price * b.discount/100)));\r\n\r\n        return{\r\n            ...state,\r\n            searchedProducts: products\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SORT_SEARCH_BY_RATING'){\r\n        const products = state.searchedProducts.map(product => {\r\n            if(product.rating.length){\r\n                product.tr = 0;\r\n                for(var i=0;i<product.rating.length;i++){\r\n                    product.tr += product.rating[i];\r\n                }\r\n            }\r\n\r\n            else  \r\n                product.tr = 0;\r\n\r\n            return product    \r\n        })\r\n\r\n        products.sort((a,b) => b.tr - a.tr);\r\n        return{\r\n            ...state,\r\n            searchedProducts : products\r\n        }\r\n    }\r\n    \r\n    if(action.type === 'FIND_SIMILAR_PRODUCTS'){\r\n        const p = state.products.filter(p => p._id === action.id);\r\n        const product = p[0];\r\n        var copy = state.products.filter(p => p._id !== action.id);\r\n        var foundSimilarProducts = [];\r\n        product.tags.forEach(tag => {\r\n            const len = copy.length;\r\n            for(var i=0;i<len;i++){\r\n                if(copy[i] !== undefined){\r\n                    let len2 = copy[i].tags.length\r\n                    for(var j = 0;j<len2;j++) {\r\n                        if(copy[i].tags[j].toLowerCase().search(tag.toLowerCase()) >=0){\r\n                            foundSimilarProducts.push(copy[i])\r\n                            copy = copy.map(c =>{\r\n                                if(c !== undefined){\r\n                                    if(c._id !== copy[i]._id)\r\n                                        return c;\r\n                                }        \r\n                            })\r\n                            break;\r\n                        }\r\n                    }\r\n                }    \r\n            }\r\n        });\r\n        return{\r\n            ...state,\r\n            similarProducts : foundSimilarProducts\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\product.js",["108","109"],"import { React, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport '../assets/productStyle.css';\r\n\r\n\r\nclass Product extends Component{\r\n    state = {\r\n        altImages: this.props.product.altImgUrl,\r\n        image: this.props.product.imgUrl\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.similarProducts(this.props.product._id);\r\n    }\r\n\r\n    handleClick = (e) =>{\r\n        let imgUrl = this.state.image,\r\n            targetImgUrl = e.target.alt,\r\n            targetImgId = e.target.id;\r\n        let altImages = this.state.altImages.filter(product => product._id != targetImgId);\r\n        const alt = {\r\n            _id : targetImgId,\r\n            imgUrl : imgUrl\r\n        }\r\n        altImages = [...altImages, alt]\r\n        this.setState({\r\n            ...this.state,\r\n            altImages: altImages,\r\n            image: targetImgUrl\r\n        });\r\n    }\r\n    \r\n    handleAddingToCart = (e) => {\r\n        if(this.props.isLoggedIn){\r\n            const product = this.props.product;\r\n            product.numberOfItems = 1 ;\r\n            axios.post('/api/apiRoutes/addToCart', product)\r\n                     .then(res => {\r\n                        this.props.addToCart(res.data);\r\n                     })\r\n                     .catch(err => console.log('err ' + err))\r\n        }\r\n        else{\r\n            this.props.history.push('/login')\r\n        }    \r\n    }\r\n    \r\n    handleDirectBuy = () => {\r\n        if(this.props.isLoggedIn){\r\n            const product = this.props.product;\r\n            product.numberOfItems = 1 ;\r\n            axios.post('/api/apiRoutes/addToCart', product)\r\n                     .then(res => {\r\n                        this.props.addToCart(res.data);\r\n                        this.props.history.push('/'+this.props.user._id+'/address', { from: this.props.product._id })\r\n                     })\r\n                     .catch(err => console.log('err ' + err))\r\n        }\r\n        else{\r\n            this.props.history.push('/login')\r\n        } \r\n    }\r\n\r\n    calculateRating = (p) => {\r\n        var sum = 0;\r\n        for(var i=0;i<p.rating.length;i++){\r\n            sum+=p.rating[i];\r\n        }\r\n        return sum/p.rating.length;\r\n    }\r\n\r\n    render(){\r\n        const altImagesList = this.state.altImages.length ?(\r\n            this.state.altImages.map(altImage => {return(\r\n                <img className=\"img-thumbnail rounded float-start\" alt={altImage.imgUrl} src={altImage.imgUrl} id={altImage._id} onClick={ this.handleClick}/>\r\n            );})\r\n        ):(<div></div>);\r\n        var inCart = false;\r\n         if(!(_.isEmpty(this.props.user))){\r\n             this.props.user.productsInCart.forEach(p => {\r\n                 if(this.props.product._id === p._id)\r\n                     inCart = true;\r\n             });\r\n         }\r\n         const btn = _.isEmpty(this.props.user) ? (<button className=\"btn btn-primary btn-a\" onClick={this.handleAddingToCart}>ADD TO CART</button>):\r\n                                                  (inCart ? (<Link to='/productsInCart' ><button className=\"btn btn-primary btn-a\" >GO TO CART</button></Link>):\r\n                                                  ((<button className=\"btn btn-primary btn-a\" onClick={this.handleAddingToCart}>ADD TO CART</button>)));\r\n\r\n        const product = this.props.product ? (\r\n            <div className=\"bg-div\" >\r\n            <div className=\"img-div col-md-5\" >\r\n                \r\n            <div className=\"small-image\">\r\n            { altImagesList }\r\n            </div>\r\n             <div className=\"big-image\">\r\n             <img className=\"img-thumbnail rounded float-start rmv-border\" alt=\"\" src={ this.state.image}/>\r\n           \r\n              {btn}\r\n             <button className=\"btn btn-success btn-b\" onClick={this.handleDirectBuy} >BUY</button>\r\n             </div>\r\n            </div>\r\n            <div className=\"info-div col-md-7\" >\r\n            <span>{this.props.product.name.toUpperCase()}</span><br/>\r\n                            <p className=\"text-muted home-reduce-margin\"><button className=\"btn btn-success\" type=\"button\" >{this.props.product.rating.length ? (this.calculateRating(this.props.product).toFixed(1)):(0)} &#9734;</button> {this.props.product.rating.length} Ratings and {this.props.product.reviews.length} Reviews</p>\r\n                            <p className=\"home-reduce-margin\" ><b><span>&#8377;{Math.round(this.props.product.price - (this.props.product.discount/100)*this.props.product.price)}</span></b> &nbsp; <s>&#8377; {this.props.product.price}</s> &nbsp; {this.props.product.discount}% off</p>\r\n                            <b>{this.props.product.emiAvailable ? <p className=\"home-reduce-margin text-info\">EMI Available</p>: <p className=\"home-reduce-margin text-danger\" >EMI Not Available</p> }\r\n                            {this.props.product.inStock ? <p className=\"home-reduce-margin text-info\">In Stock</p> : <p className=\"home-reduce-margin text-danger\" >Out of Stock</p>}\r\n                            </b> <p className=\"home-reduce-margin\">{this.props.product.info}</p>  \r\n            </div>\r\n        </div>\r\n        ):(<div className='container text-danger'>\r\n        <h2>Error 404: Product not Found</h2>\r\n    </div>)\r\n    const similarProducts = this.props.foundSimilarProducts\r\n    const sp = similarProducts.length ? (\r\n        similarProducts.map(product => {\r\n            return(\r\n                <div className='similar-card' >\r\n                <img className=\"img-thumbnail rounded rmv-border\" alt=\"\" src={product.imgUrl} />\r\n                <div className=\"caption\">\r\n                {product.name.toUpperCase()}\r\n                </div>\r\n                </div>\r\n            )\r\n        })\r\n    ) : (<></>)\r\n        return(<div className='container-fluid '>\r\n            <div >\r\n            <br/>\r\n               {product}\r\n            </div><br/><br/>\r\n            <div className='text-center'>SIMILAR PRODUCTS</div>\r\n            <div className='scroll'>\r\n                {sp}                \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, myProps) => {\r\n    let id = myProps.match.params.id;\r\n    return{\r\n        product: state.products.find(product => id==product._id),\r\n        isLoggedIn : state.isLoggedIn,\r\n        user : state.user,\r\n        foundSimilarProducts : state.similarProducts\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        updateImage : (idObject) => {\r\n            dispatch({type:'UPDATE_IMAGE', object:idObject});    \r\n        },\r\n        addToCart : (user) =>{\r\n            dispatch({type:'ADD_TO_CART',user:user});\r\n        },\r\n        similarProducts : (id) => {\r\n            dispatch({type:'FIND_SIMILAR_PRODUCTS', id:id});\r\n        }\r\n      }\r\n\r\n    }\r\n    \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\cart.js",["110"],"import {React, Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../assets/cartStyle.css';\r\n\r\nclass Cart extends Component{\r\n\r\n    handleSubstractItems = (e) => {\r\n        let id = e.target.id;\r\n        console.log(id)\r\n        axios.post('/api/apiRoutes/substractNumberOfItems', {id : id})\r\n             .then(res => {\r\n                this.props.substractNumberOfItems(res.data);\r\n             })\r\n        \r\n    }\r\n    handleAddItems = (e) => {\r\n        let id = e.target.id;\r\n        console.log(id)\r\n        axios.post('/api/apiRoutes/addNumberOfItems', {id : id})\r\n             .then(res => {\r\n                this.props.addNumberOfItems(res.data);\r\n             })\r\n    }\r\n    handleRemove = (e) => {\r\n        let id = e.target.id;\r\n        console.log(id)\r\n        axios.post('/api/apiRoutes/removeCartProduct', {id : id})\r\n             .then(res => {\r\n                this.props.updateCart(res.data);\r\n             })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props)\r\n        const productsInCart = this.props.productsInCart;\r\n        const inCartList = productsInCart.length ? (\r\n            productsInCart.map(productInCart => {return(\r\n           <div>\r\n            <div className=\"cart-ldiv\">\r\n                <div className=\"cart-img-div\">\r\n                    <img className=\"img-thumbnail rounded float-start\"  src={productInCart.imgUrl}/>\r\n                </div>\r\n                <div className=\"cart-info-div\">\r\n                    <span>{productInCart.name.toUpperCase()}</span><br/>\r\n                    <p className=\"home-reduce-margin\"><span>&#8377;{Math.round(productInCart.price - (productInCart.discount/100)*productInCart.price)}</span>&nbsp;<s>&#8377;{productInCart.price}</s> {productInCart.discount}% off</p>\r\n                    {productInCart.inStock ? <p className=\"home-reduce-margin text-info\">In Stock</p> : <p className=\"home-reduce-margin text-danger\" >Out of Stock</p>}\r\n                    {Math.round(productInCart.price - (productInCart.discount/100)*productInCart.price) > 1000 ? <p className=\"home-reduce-margin text-info\">Free Delevery</p> : <p className=\"home-reduce-margin text-danger\">Delevery Charges Applied</p>}\r\n                    <button type=\"button\" className=\"btn cart-mk\" id={productInCart._id} onClick={this.handleSubstractItems} >-</button> <button className=\" btn cart-count\">{productInCart.numberOfItems}</button> <button className=\"btn cart-mk\" id={productInCart._id} onClick={this.handleAddItems} >+</button><br/>\r\n                    <button className=\"btn btn-danger cart-remove\" id={productInCart._id} onClick={this.handleRemove}>REMOVE</button>\r\n                </div>\r\n            </div>\r\n            \r\n            </div>\r\n        )})\r\n        ):( <div className='jumbotron'>HEY, NO PRODUCTS ADDED IN CART YET</div>);\r\n\r\n        var totalPrice=0, netPrice=0, idca=0;\r\n        \r\n        productsInCart.forEach(product => {\r\n            totalPrice += product.numberOfItems*product.price;\r\n            netPrice += product.numberOfItems*(product.price - (product.discount/100)*product.price);\r\n            if((product.price - (product.discount/100)*product.price) < 1000)\r\n                idca++;\r\n        });\r\n\r\n        let dCharge = idca ? idca*120 : 0;\r\n\r\n        const priceDetails = productsInCart.length ? (\r\n            <div className=\"cart-price\">\r\n                    <div><span className=\"float-left\"> TOTAL PRICE</span> <span className=\"float-right\">&#8377;{Math.round(netPrice)}</span></div>\r\n                        <div><span className=\"float-left\">DISCOUNT</span><span className=\"float-right\">&#8377;{Math.round(totalPrice-netPrice)}</span></div>\r\n                        <div><span className=\"float-left\">DELEVERY CHARGES</span><span className=\"float-right\">&#8377;{dCharge}</span></div> \r\n                        <hr/>\r\n                        \r\n                        <div className=\"net-total\"><span className=\"float-left\">TOTAL AMOUNT</span><span className=\"float-right\">&#8377;{Math.round(netPrice + dCharge)}</span></div>\r\n                          <button class=\"btn btn-primary buy-btn\" type=\"button\" onClick = { ()=>{this.props.history.push('/'+this.props.user._id +'/address', {from : \"cart\"})}}>PROCEED TO BUY</button>\r\n                        </div>\r\n        ):(<div></div>)\r\n\r\n        return(\r\n            <div className=\"Cart container-fluid\">\r\n            <br/>\r\n            <div>\r\n            </div>\r\n            <div className=\"cart-mld col-md-8\"> \r\n                {this.props.user.productsInCart.length ? (<div className=\"my-cart\">MY CART ( {this.props.productsInCart.length} ) </div>):(<></>)}\r\n                {inCartList}\r\n            </div>\r\n                <div className=\"cart-mrd cart-sticky col-md-4\">\r\n                {this.props.user.productsInCart.length ? (<div className=\"my-cart\">PRICE DETAILS</div>):(<></>)}\r\n                    {priceDetails}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        productsInCart: state.user.productsInCart,\r\n        user : state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        updateCart: (user) => {\r\n            dispatch({type:'UPDATE_CART',user: user});\r\n        },\r\n        addNumberOfItems: (user) => {\r\n            dispatch({type:'ADD_ITEM',user : user});\r\n        },\r\n        substractNumberOfItems: (user) => {\r\n            dispatch({type:'SUBSTRACT_ITEM',user:user});\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Cart));","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\Login.js",[],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\Register.js",[],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\addProduct.js",["111","112","113","114","115","116"],"import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport ReactFormInputValidation from \"react-form-input-validation\";\r\nimport axios from \"axios\";\r\n\r\nclass AddProduct extends Component{\r\n\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            files : [],\r\n\t\t  fields: {\r\n            name : \"\",\r\n            price : \"\",\r\n            discount : \"\", \r\n            emiAvailable : \"\",\r\n            inStock : \"\",\r\n            info: \"\"  \r\n\t\t  },\r\n\t\t  errors: {},\r\n\t\t  \r\n\t\t};\r\n\t\tthis.form = new ReactFormInputValidation(this);\r\n\t\tthis.form.useRules({\r\n\t\t\tname: \"required\",\r\n\t\t\timage: \"required\",\r\n\t\t\tprice: \"required|numeric\",\r\n\t\t\tdiscount: \"required|numeric\",\r\n            inStock: \"required\",\r\n            emiAvailable: \"required\",\r\n            info: \"required\"\r\n\t\t});\r\n\t\tthis.form.onformsubmit = (fields) => {\r\n\t\t\tthis.send(fields);\r\n\t\t}\r\n\t  }\r\n\r\n    send = (fields) => {\r\n        const price = parseInt(fields.price),\r\n              discount = parseInt(fields.discount),\r\n              a = Array.from(this.state.files),\r\n              name = fields.name,\r\n              info = fields.info;\r\n        var inStock, emiAvailable;\r\n        console.log(this.state.files[0])\r\n        if(fields.inStock == 'true')\r\n            inStock = true;\r\n\r\n        else\r\n            inStock = false;\r\n            \r\n        if(fields.emiAvailable == 'true')\r\n            emiAvailable = true;\r\n\r\n        else\r\n            emiAvailable = false;    \r\n\r\n        \r\n        const data = new FormData();\r\n        data.append(\"name\", name);\r\n        data.append(\"price\", price);\r\n        data.append(\"discount\", discount);\r\n        data.append(\"inStock\", inStock);\r\n        data.append(\"emiAvailable\", emiAvailable);\r\n        data.append(\"info\", info);\r\n        for(var i=0; i < a.length; i++){\r\n            data.append(\"files\",this.state.files[i] )\r\n        }\r\n\r\n        axios.post(\"api/apiRoutes/addProduct\", data)\r\n          .then(res => {\r\n              this.props.history.push('/');\r\n          })\r\n          .catch(err => console.log('err'));\r\n      };    \r\n    render() {\r\n  \r\n  return (\r\n\t<div>       \r\n    <body>\r\n\t<div className=\"container-fluid\">\r\n\t\t<div className=\"row main-content bg-success text-center\">\r\n\t\t\t<div className=\"col-md-4 text-center company__info\">\r\n\t\t\t\t<span className=\"company__logo\"><h2><span class=\"fa fa-android\"></span></h2></span>\r\n\t\t\t\t<h4 className=\"company_title\">IIIT.com</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-8 col-xs-12 col-sm-12 login_form\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<h2>Register</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<form className=\"form-group\" onSubmit={this.form.handleSubmit} >\r\n\t\t\t\t\t\t<div class=\"row\">    \r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n\t\t\t\t  id=\"ProductName\"\r\n\t\t\t\t   className=\"form__input\"\r\n\t\t\t\t    placeholder=\"Product Name\"\r\n                  onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent}\r\n                  value={this.state.fields.name}\r\n                />\r\n\t\t\t  </div>\r\n              <div className=\"error row\">\r\n                {this.state.errors.name ? <span>* {this.state.errors.name} </span> : \"\"}\r\n              \r\n\t\t\t  </div>\r\n \r\n\t\t\t  <div class=\"row\">\r\n                <input\r\n                  type=\"file\"\r\n                  multiple\r\n                  name=\"image\"\r\n\t\t\t\t  id=\"file\" \r\n\t\t\t\t  className=\"form__input\" \r\n                  onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent , event => {\r\n                const files = event.target.files;\r\n                this.setState({\r\n                     files : files\r\n                })\r\n                const max_length = 5;\r\n                if(Array.from(files).length > max_length){\r\n                    event.target.value = null;\r\n                    alert('Cannot upload files more than '+ max_length);\r\n                    this.state.errors.image = \"Cannot take more than five photos\"\r\n                }\r\n              }}\r\n                />\r\n\t\t\t  </div>\r\n              <div className=\"error row\">\r\n                {this.state.errors.image ? <span>* {this.state.errors.image} </span> : \"\"}\r\n              </div>\r\n \r\n            \r\n\t\t\t<div className=\"row\">\r\n            <input\r\n                  type=\"tel\"\r\n                  name=\"price\"\r\n\t\t\t\t  id=\"price\" \r\n\t\t\t\t  className=\"form__input\" \r\n\t\t\t\t  placeholder=\"Product's Price\"\r\n                  onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent}\r\n                  value={this.state.fields.price}\r\n                />\r\n            </div>\r\n              <div className=\"error row\">\r\n                {this.state.errors.price? <span>* {this.state.errors.price} </span> : \"\"}\r\n              </div>\r\n\t\t\t<div className=\"row\">\r\n            <input type=\"tel\" \r\n\t               className=\"form__input\"\r\n\t               name=\"discount\" \r\n\t\t\t\t   id=\"discount\" \r\n\t\t\t\t   placeholder=\"Enter Discount( In %)\" \r\n\t\t\t\t   onBlur={this.form.handleBlurEvent} \r\n\t               onChange={this.form.handleChangeEvent} \r\n\t               value={this.state.fields.discount} \r\n\t               noValidate />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"error row\">\r\n                {this.state.errors.discount ? <span>* {this.state.errors.discount} </span> : \"\"}\r\n            </div>\r\n\t\t    <div className=\"row\">\r\n            <div className=\"form__input\" onChange= {e => {this.state.fields.inStock = e.target.value}}>In Stock&nbsp;&nbsp;\r\n            <input type=\"radio\" id=\"inStock-yes\" value=\"true\" name=\"inStock\" onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent} /> Yes &nbsp;&nbsp;\r\n            <input type=\"radio\" id=\"inStock-no\"  value=\"false\" name=\"inStock\" onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent} />No\r\n            </div>\r\n            </div><div className=\"error row\">\r\n                {this.state.errors.inStock ? <span>* {this.state.errors.inStock} </span> : \"\"}\r\n            </div>\r\n\t\t    <div className=\"row\">\r\n            <div className=\"form__input\" onChange= {e => {this.state.fields.emiAvailable = e.target.value}}>Is EMI Available&nbsp;&nbsp;\r\n            <input type=\"radio\" id=\"emiAvailable-yes\" name=\"emiAvailable\"  value=\"true\" onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent}/>Yes\r\n            <input type=\"radio\" id=\"emiAvailable-no\" name=\"emiAvailable\" value=\"false\" onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent}/> No\r\n            </div>\r\n            </div><div className=\"error row\">\r\n                {this.state.errors.emiAvailable ? <span>* {this.state.errors.emiAvailable} </span> : \"\"}\r\n            </div>\r\n            <div class=\"row\">    \r\n                <input\r\n                  type=\"text\"\r\n                  name=\"info\"\r\n\t\t\t\t  id=\"ProductInfo\"\r\n\t\t\t\t   className=\"form__input\"\r\n\t\t\t\t    placeholder=\"Product description\"\r\n                  onBlur={this.form.handleBlurEvent}\r\n                  onChange={this.form.handleChangeEvent}\r\n                  value={this.state.fields.info}\r\n                />\r\n\t\t\t  </div>\r\n              <div className=\"error row\">\r\n                {this.state.errors.info ? <span>* {this.state.errors.info} </span> : \"\"}\r\n              \r\n\t\t\t  </div>\r\n\t\t\t<div class=\"row\">\r\n              <button type=\"submit\" className=\"btn login-register-btn\" >Submit</button>\r\n            </div>\r\n            \r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</body>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default AddProduct;","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\searchedProducts.js",["117","118","119","120","121","122","123"],"import {React, Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link,NavLink} from 'react-router-dom';\r\nimport Navbar from './navbar.js'\r\nimport '../assets/homeStyle.css';\r\n\r\nclass Search extends Component{\r\n\r\n   componentDidMount(pre){\r\n       console.log('sucess')\r\n        this.props.search(this.props.match.params.value);\r\n   }\r\n\r\n   componentDidUpdate(pre){\r\n    console.log(pre)\r\n    if(pre.location.pathname !== this.props.location.pathname){\r\n        console.log(this.props)\r\n     this.props.search(this.props.match.params.value);\r\n    }\r\n}\r\n\r\n    state = {\r\n        preValue : ''\r\n    }\r\n\r\n    sortDescending = () =>{\r\n        this.props.sortHighToLowSearch();\r\n    }\r\n\r\n    sortAscending = () => {\r\n        this.props.sortLowToHighSearch();\r\n    }\r\n    \r\n    sortRating = () => {\r\n        this.props.sortRatingSearch();\r\n    }\r\n\r\n    render(){\r\n        // if(this.state.preValue !== this.props.match.params.value){\r\n        //     this.props.search(this.props.match.params.value);\r\n        //     console.log(true)\r\n        //     console.log(this.props.products)\r\n        //     this.setState({\r\n        //         preValue: this.props.match.params.value\r\n        //     })\r\n        // }\r\n        // console.log(this.props.products)\r\n        const products = this.props.products;\r\n        const sort = products.length ? (<div className=\"mld \">\r\n        <div className=\"ldiv\">\r\n            <span>SORT BY</span><br/>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <ul className=\"navbar-nav\">\r\n            <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Price\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a class=\"dropdown-item\" onClick={this.sortDescending} >High to Low</a>\r\n          <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" onClick={this.sortAscending} >Low to High</a>\r\n        </div>\r\n      </li>\r\n      <li>\r\n      <a class=\"nav-link\" href=\"#\" onClick={this.sortRating} >\r\n          Rating\r\n        </a>\r\n        </li>\r\n        <li>\r\n      <a class=\"nav-link\" href=\"#\"  >\r\n          Relevence\r\n        </a>\r\n      </li>\r\n      </ul>\r\n        </div>\r\n    </div>):(<div></div>)\r\n        const productList = products.length ? (\r\n            products.map(product => {return(\r\n                    <div className=\"mrd\" key={product._id} >\r\n                        <Link to={'/products/' + product._id } style={{ color: 'inherit', textDecoration: 'none'}}>\r\n                            <div className=\"rdiv\" >\r\n                                    <div className=\"productImage\">\r\n                                        <img className=\"img-thumbnail rounded float-start\" alt={product.imgUrl} src={product.imgUrl} />\r\n                                    </div>\r\n\r\n                                <div className=\"productInfo\" >\r\n                                    <span>{product.name.toUpperCase()}</span><br/>\r\n                                    {/* <p className=\"text-muted home-reduce-margin\"><button className=\"btn btn-success\" type=\"button\" >{product.rating} &#9734;</button> {product.ratedBy} Ratings and {product.reviewedBy} Reviews</p> */}\r\n                                    <p className=\"home-reduce-margin\">{product.info.substring(0,300)}...</p>\r\n                                </div>\r\n    \r\n                                <div className=\"productPrice\">\r\n                                    <span>&#8377; {Math.round(product.price - (product.discount/100)*product.price)}</span><br/>\r\n                                    <p className=\"home-reduce-margin\"> <s>&#8377; {product.price}</s> &nbsp; {product.discount}% off</p>\r\n                                    { product.emiAvailable ? <p className=\"home-reduce-margin\">EMI Available</p>: <p className=\"home-reduce-margin text-danger\" >EMI Not Available</p> }\r\n                                    {product.inStock ? <p className=\"home-reduce-margin\">In Stock</p> : <p className=\"home-reduce-margin text-danger\" >Out of Stock</p>}\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>           \r\n             ) })\r\n        ) : (<div className='jumbotron'>HEY, NO PRODUCTS FOUND RELATED TO YOUR SEARCH</div>)\r\n        return(\r\n            <div className='home row'>\r\n            <div className=\"col-md-3 cart-sticky home-mld\">{sort}</div>\r\n\r\n               <div className=\"col-md-9 home-mrd\" >    { productList } </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n        products: state.searchedProducts,\r\n        value : state.searchValue\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sortHighToLowSearch : () => {\r\n            dispatch({type:'SORT_SEARCH_HIGH_TO_LOW'});\r\n        },\r\n        sortLowToHighSearch : () => {\r\n            dispatch({type:'SORT_SEARCH_LOW_TO_HIGH'});\r\n        },\r\n        sortRatingSearch : () => {\r\n            dispatch({type:'SORT_SEARCH_BY_RATING'})\r\n        },\r\n        search : (value) => {\r\n            dispatch({type:'SEARCH', value:value});\r\n        }  \r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\reducers\\localStorage.js",[],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\addAddress.js",[],["124","125"],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\addresses.js",["126"],"import { React, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../assets/addresses.css'\r\n\r\nclass Address extends Component{\r\n    state = {\r\n        checkedAddress : ''\r\n    }\r\n\r\n\r\n    calculateDC = () => {\r\n        let tc = 0;\r\n        if(this.props.location.state.from !== \"cart\"){\r\n            let p = this.props.user.productsInCart.filter(m => m._id === this.props.location.state.from)\r\n            let price = Math.round(p[0].price - (p[0].discount/100)*p[0].price)\r\n            if(price >1000)\r\n                tc+=price;\r\n            \r\n            else\r\n                tc+=(price + 120);\r\n        }\r\n\r\n        else{\r\n            this.props.user.productsInCart.map(p => {\r\n                let price = Math.round(p.price - (p.discount/100)*p.price);\r\n                if(price >1000)\r\n                tc+=price;\r\n            \r\n            else\r\n                tc+=(price + 120);\r\n            })\r\n        }\r\n        return tc;\r\n    }\r\n\r\n    displayRazorpay = async () => {\r\n        const totalCharge = this.calculateDC();\r\n        console.log(totalCharge)\r\n        const result = await axios.post(\"/api/apiRoutes/orders\", {totalCharge});\r\n\r\n        if (!result) {\r\n            alert(\"Server error. Are you online?\");\r\n            return;\r\n        }\r\n\r\n        const { amount, id: order_id, currency } = result.data;\r\n\r\n        console.log(result.data)\r\n\r\n\r\n        const options = {\r\n            key: \"rzp_test_Rr55cqI1se8NcK\", // Enter the Key ID generated from the Dashboard\r\n            amount: amount.toString(),\r\n            currency: currency,\r\n            name: \"IIIT.com\",\r\n            description: \"Test Transaction\",\r\n            order_id: order_id,\r\n            handler : async (response) => {\r\n                const data = {\r\n                    orderCreationId: order_id,\r\n                    razorpayPaymentId: response.razorpay_payment_id,\r\n                    razorpayOrderId: response.razorpay_order_id,\r\n                    razorpaySignature: response.razorpay_signature,\r\n                };\r\n                const result = await axios.post(\"/api/apiRoutes/success\", data);\r\n\r\n                if(result.data.msg === \"Payment Successful\"){\r\n                        const obj = {\r\n                            orderId : result.data.orderId,\r\n                            paymentId : result.data.paymentId,\r\n                            pId : this.props.location.state.from,\r\n                            addressId : this.state.checkedAddress\r\n                        }\r\n                        axios.post('/api/apiRoutes/orderConfirmed', obj )\r\n                             .then(res => {\r\n                                 this.props.checkLoginstatus(res.data);\r\n                                 this.props.history.push('/productsInCart')\r\n                             })\r\n                }\r\n                alert(result.data.msg);\r\n                \r\n            },\r\n            prefill: {\r\n                name: this.props.user.firstName + this.props.user.lastName ,\r\n                email: this.props.user.username,\r\n                contact: this.props.user.phone_number,\r\n            },\r\n            notes: {\r\n                address: this.props.user.addresses.filter(a => a._id === this.state.checkedAddress),\r\n            },\r\n            theme: {\r\n                color: \"#61dafb\",\r\n            },\r\n            payment_capture: 1\r\n        };\r\n\r\n        const paymentObject = new window.Razorpay(options);\r\n        paymentObject.open();\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(this.state)\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.props.history.push('/'+ this.props.user._id +'/addAddress')\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.props)\r\n        const address = this.props.user.addresses\r\n        const addressList =  address.length ? ( address.map(p => {return(\r\n        <div className='address-card'>\r\n            <div class=\"custom-control custom-radio\">\r\n  <input type=\"radio\" id={p._id} name=\"customRadio\" value={p._id} class=\"custom-control-input\" onChange = {e => this.setState({checkedAddress:e.target.value})  }/>\r\n  <label class=\"custom-control-label\" for={p._id}> \r\n      {p.address.toUpperCase()}<br/>\r\n      {p.address2.length ? (<div>{p.address2.toUpperCase()}</div>):(<div></div>)}\r\n      {p.city.toUpperCase()}<br/>\r\n      {p.state.toUpperCase()}<br/>\r\n      {p.zip}\r\n  </label>\r\n</div>\r\n        </div>)})):(\r\n            this.props.history.push('/'+ this.props.user._id +'/addAddress')\r\n        )\r\n        var p;\r\n        if(this.props.location.state.from !== \"cart\"){\r\n            p = this.props.user.productsInCart.filter(m => m._id === this.props.location.state.from)\r\n        }\r\n        var sum = 0;   \r\n        const summary = this.props.location.state.from === \"cart\" ? (\r\n            this.props.user.productsInCart.map(p=> {\r\n                let price = Math.round(p.price - (p.discount/100)*p.price);\r\n                if(price < 1000)\r\n                    sum+=(price+120);\r\n\r\n                else\r\n                    sum+=price;\r\n                \r\n                return(\r\n                <div>\r\n                <div className=\"row\" >\r\n                   <div className=\"col-sm-10\">{p.name.toUpperCase()} &nbsp;\r\n                   { Math.round(p.price - (p.discount/100)*p.price)<1000 ? (<div className=\"text-danger text-sm\" >Delivery Charges Applied</div>) : (<></>)}\r\n                   </div>\r\n                   <div className=\"col-sm-2\">&#8377;{Math.round(p.price - (p.discount/100)*p.price)}\r\n                   { Math.round(p.price - (p.discount/100)*p.price)<1000 ? (<div className=\"text-danger text-sm\">(+&#8377;120)</div>) : (<></>)}\r\n                   </div>\r\n                   </div>\r\n                   <div className=\"dropdown-divider\"></div>\r\n        </div>\r\n            )})\r\n            ) : (\r\n                <div>\r\n                <div className=\"row\" >\r\n                   <div className=\"col-sm-10\">{p[0].name.toUpperCase()} &nbsp;\r\n                   { Math.round(p[0].price - (p[0].discount/100)*p[0].price)<1000 ? (<div className=\"text-danger text-sm\">Delivery Charges Applied</div>) : (<></>)}\r\n                   </div>\r\n                   <div className=\"col-sm-2\">&#8377;{Math.round(p[0].price - (p[0].discount/100)*p[0].price)}\r\n                   { Math.round(p[0].price - (p[0].discount/100)*p[0].price)<1000 ? (<div className=\"text-danger text-sm\">(+&#8377;120)</div>) : (<></>)}\r\n                   </div>\r\n                   </div>\r\n                   <div className=\"dropdown-divider\"></div>\r\n        </div>)\r\n        return(\r\n            <div>\r\n            <br/>\r\n            <div className='address'>\r\n                <div className=\"address-card\">\r\n                    <div className='text-info text-center head'>Order Summary</div>\r\n                    <div className=\"dropdown-divider\"></div>\r\n                    <div>\r\n                        {summary}\r\n                    </div>\r\n                    {this.props.location.state.from === \"cart\" ? (<div className=\"row\">\r\n                        <div className=\"col-sm-10\" >TOTAL</div>\r\n                   <div className=\"col-sm-2\" >&#8377;{sum}\r\n                   </div>\r\n                   </div>\r\n                    ) : (<div className=\"row\">\r\n                        <div className=\"col-sm-10\" >TOTAL</div>\r\n                        <div className=\"col-sm-2\" >&#8377;{Math.round(p[0].price - (p[0].discount/100)*p[0].price)<1000 ? (Math.round(p[0].price - (p[0].discount/100)*p[0].price)+120) : (Math.round(p[0].price - (p[0].discount/100)*p[0].price))}\r\n                   </div>\r\n                    </div>)}\r\n                </div>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    {addressList}\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-responsive\" onClick={this.displayRazorpay}>Proceed To Payment</button> &nbsp;&nbsp;\r\n                    <button type=\"button\" class=\"btn btn-primary btn-responsive\" onClick={this.handleClick}>Add Another Address</button>\r\n                    \r\n                </form>    \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        user : state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        checkLoginstatus: (status) => {\r\n            dispatch({type:'LOGIN_STATUS',status:status});\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Address));","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\dashboard.js",["127"],"import {React, Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../assets/dashboard.css'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        \r\n        const address = this.props.user.addresses\r\n        const addressList =  address.length ? ( address.map(p => {return(\r\n            <div >\r\n          {p.address}<br/>\r\n          {p.address2.length ? (<div>{p.address2}</div>):(<div></div>)}\r\n          {p.city}<br/>\r\n          {p.state}<br/>\r\n          {p.zip} \r\n    <div className='dropdown-divider'></div>\r\n          </div>)})):(\r\n                <div></div>)\r\n            \r\n\r\n        return(\r\n        <div className='container '>\r\n        <br/><br/><br/>\r\n        <div className='container-fluid'>\r\n            <div className='row dashboard'>\r\n                <div className='col-md-4 col-xs-12 dashboard-small'>\r\n                <div className='dp'>\r\n                        <img className='dp' src={'/images/profile-photo.png'}/>\r\n                        <button className='posi-btn'>Edit</button>\r\n                        </div>  \r\n                        <br/>\r\n                        <div style={{fontSize:25, fontWeight:2000}}>{this.props.user.firstName} {this.props.user.lastName}</div>\r\n                        \r\n                </div>\r\n                <div className='col-md-8 col-sm-12 user-info'>\r\n                <div class=\"form-group\">\r\n                      <div style={{fontWeight:600}}> E-mail Id</div>\r\n                      <div >{this.props.user.username}</div>\r\n                </div>      \r\n                <div className='dropdown-divider'></div>\r\n                <div class=\"form-group\">\r\n                      <div style={{fontWeight:600}}> Contact Number</div>\r\n                      <div >{this.props.user.phone_number}</div>\r\n                </div>      \r\n                <div className='dropdown-divider'></div>\r\n                <div class=\"form-group\">\r\n                      <div style={{fontWeight:600}}> Address</div>\r\n                      {addressList}\r\n                      <button className='btn btn-primary' onClick={() => {this.props.history.push('/'+ this.props.user._id + '/addAddress')} } >Add Another Address</button>\r\n                </div>      \r\n                <div className='dropdown-divider'></div>\r\n                <div className='float-right'><button className='btn btn-danger'>Edit Info</button></div><br/><br/>\r\n                <div className='float-right'><button className='btn btn-danger'>Reset Password</button></div>\r\n                \r\n                    <div></div>\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        user:state.user\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Dashboard));","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\verify.js",[],"C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\footer.js",["128"],"import {React, Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport '../assets/footer.css'\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <footer className=\"footer\">\r\n            <div className='row container-fluid'  style={{marginRight:0,marginLeft:0}}>\r\n            <div className=\"col-4\">\r\n            <img src={'/images/footerlogo.png'} className=\"footer-logo\"/>\r\n            </div>\r\n            <div className='col-4' >\r\n            <div className=\"thumbnail\">\r\n                <div className=\"caption\">CONTACT US:</div>\r\n                <div className=\"caption\">\r\n                    <Link href=\"#\" class=\"fa fa-facebook\" style={{textDecoration:'none'}}></Link>\r\n                    <Link href=\"#\" class=\"fa fa-twitter\" style={{textDecoration:'none'}}></Link>\r\n                    <Link href=\"#\" class=\"fa fa-google\" style={{textDecoration:'none'}}></Link>\r\n                    <Link href=\"#\" class=\"fa fa-linkedin\" style={{textDecoration:'none'}}></Link>\r\n                </div>\r\n            </div>    \r\n            </div>\r\n            <div className='col-4' >\r\n                <div className=\"thumbnail\">\r\n                    <div className=\"caption\">Developer:</div>\r\n                    <div className=\"caption\">Jayant Patil</div>\r\n                    <div className=\"caption\">8378038486</div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className='col-12 text-center baby-footer' >\r\n                <div>&#169; 2021 IIIT.com. All Rights Reserved</div>\r\n            </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","C:\\Users\\one\\Desktop\\React\\Ecom\\client\\src\\views\\ordersOnWay.js",["129"],"import {React, Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../assets/onw.css'\r\n\r\nclass Onw extends Component{\r\n    render(){\r\n        const o = this.props.state.user.orders\r\n        const orders = o.length ? (\r\n            o.map(i => {\r\n                return(\r\n                i.products.map(j => {\r\n                    let date = new Date(i.tentArrive);\r\n                    return(\r\n                    <div className=\"row justify-content-center\">\r\n                <div className='col col-sm-8 col-12 onw-card'>\r\n                    <div className='row'>\r\n                    <div className='col col-3'>\r\n                        <img src={j.imgUrl} className='img-thumbnail round' style={{maxHeight:125,minHeight:60,minWidth:60, border:'none'}}/>\r\n                    </div>\r\n                    <div className='col col-9'>\r\n                            <div className=\"mb-1\">{j.name.toUpperCase()}</div>\r\n                            <div>Expected Delivery on <b>{date.toDateString()}</b></div>\r\n                    </div> \r\n                    </div>   \r\n                </div>\r\n                </div>\r\n                )})\r\n            )})\r\n        ) : (<div className='jumbotron'>\r\n            You \r\n        </div>)\r\n\r\n        return(\r\n            <div className='container onw'>\r\n            <br/>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        state : state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Onw);",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":3,"column":14,"nodeType":"136","messageId":"137","endLine":3,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":35,"column":17,"nodeType":"140","endLine":35,"endColumn":63},{"ruleId":"141","severity":1,"message":"142","line":42,"column":9,"nodeType":"140","endLine":42,"endColumn":154},{"ruleId":"141","severity":1,"message":"143","line":46,"column":11,"nodeType":"140","endLine":46,"endColumn":67},{"ruleId":"141","severity":1,"message":"143","line":48,"column":11,"nodeType":"140","endLine":48,"endColumn":66},{"ruleId":"141","severity":1,"message":"142","line":52,"column":7,"nodeType":"140","endLine":52,"endColumn":63},{"ruleId":"141","severity":1,"message":"142","line":57,"column":7,"nodeType":"140","endLine":57,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"144","line":2,"column":25,"nodeType":"136","messageId":"137","endLine":2,"endColumn":35},{"ruleId":"134","severity":1,"message":"145","line":2,"column":37,"nodeType":"136","messageId":"137","endLine":2,"endColumn":45},{"ruleId":"138","severity":1,"message":"139","line":69,"column":5,"nodeType":"140","endLine":69,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":87,"column":9,"nodeType":"140","endLine":87,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":94,"column":59,"nodeType":"148","messageId":"149","endLine":94,"endColumn":61},{"ruleId":"150","severity":1,"message":"151","line":170,"column":45,"nodeType":"148","messageId":"152","endLine":175,"endColumn":30},{"ruleId":"146","severity":1,"message":"147","line":170,"column":47,"nodeType":"148","messageId":"149","endLine":170,"endColumn":49},{"ruleId":"153","severity":1,"message":"154","line":23,"column":76,"nodeType":"155","messageId":"156","endLine":23,"endColumn":78},{"ruleId":"153","severity":1,"message":"157","line":148,"column":51,"nodeType":"155","messageId":"156","endLine":148,"endColumn":53},{"ruleId":"138","severity":1,"message":"139","line":43,"column":21,"nodeType":"140","endLine":43,"endColumn":101},{"ruleId":"153","severity":1,"message":"157","line":46,"column":27,"nodeType":"155","messageId":"156","endLine":46,"endColumn":29},{"ruleId":"153","severity":1,"message":"157","line":52,"column":32,"nodeType":"155","messageId":"156","endLine":52,"endColumn":34},{"ruleId":"158","severity":1,"message":"159","line":119,"column":57,"nodeType":"160","messageId":"161","endLine":119,"endColumn":58},{"ruleId":"162","severity":1,"message":"163","line":128,"column":21,"nodeType":"164","endLine":128,"endColumn":38},{"ruleId":"162","severity":1,"message":"163","line":168,"column":59,"nodeType":"164","endLine":168,"endColumn":76},{"ruleId":"162","severity":1,"message":"163","line":178,"column":59,"nodeType":"164","endLine":178,"endColumn":76},{"ruleId":"134","severity":1,"message":"135","line":3,"column":14,"nodeType":"136","messageId":"137","endLine":3,"endColumn":21},{"ruleId":"134","severity":1,"message":"165","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":55,"column":9,"nodeType":"140","endLine":55,"endColumn":154},{"ruleId":"141","severity":1,"message":"143","line":59,"column":11,"nodeType":"140","endLine":59,"endColumn":67},{"ruleId":"141","severity":1,"message":"143","line":61,"column":11,"nodeType":"140","endLine":61,"endColumn":66},{"ruleId":"141","severity":1,"message":"142","line":65,"column":7,"nodeType":"140","endLine":65,"endColumn":63},{"ruleId":"141","severity":1,"message":"142","line":70,"column":7,"nodeType":"140","endLine":70,"endColumn":38},{"ruleId":"130","replacedBy":"166"},{"ruleId":"132","replacedBy":"167"},{"ruleId":"146","severity":1,"message":"168","line":26,"column":50,"nodeType":"148","messageId":"169","endLine":26,"endColumn":52},{"ruleId":"138","severity":1,"message":"139","line":29,"column":25,"nodeType":"140","endLine":29,"endColumn":80},{"ruleId":"138","severity":1,"message":"139","line":11,"column":13,"nodeType":"140","endLine":11,"endColumn":74},{"ruleId":"138","severity":1,"message":"139","line":18,"column":25,"nodeType":"140","endLine":18,"endColumn":142},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'withRouter' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'copy', 'i'.","unsafeRefs","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Navbar' is defined but never used.",["170"],["171"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]